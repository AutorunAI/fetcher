let t={RESPONSE:"[Fetcher]: Network request failed",JSON:"[Fetcher]: Response is not valid JSON"},e=Object.freeze({}),r=({baseUrl:r,hooks:a,fetch:c=e,...o}=e)=>{let{onBeforeRequest:n,onFetchResourceError:E,onJsonTransformError:h,onResponseNotOkError:s,onResponseOk:i}=a??e,d=(t,{url:e,...a})=>{let E=r?`${r}${e}`:e,h={method:t,...o,...c,...a};return n?n(E,h):[E,h]},l=(e,r)=>({json:async()=>{let a={"Content-Type":"application/json"},[c,o]=d(e,"data"in r&&r.data?{...r,body:JSON.stringify(r.data),headers:a}:{...r,headers:a}),n=await fetch(c,o).catch(()=>{throw E&&E(c,o),Error(t.RESPONSE)}),l=await n.json().catch(()=>{throw h&&h({response:n}),Error(t.JSON)});return!n.ok&&s&&s({response:n,data:l}),i&&i({response:n,data:l}),{response:n,data:l}}});return{get:t=>l("GET",t),post:t=>l("POST",t),put:t=>l("PUT",t),patch:t=>l("PATCH",t),delete:t=>l("DELETE",t)}};export{t as EXCEPTION,r as createFetcher,r as default};
//# sourceMappingURL=index.js.map
